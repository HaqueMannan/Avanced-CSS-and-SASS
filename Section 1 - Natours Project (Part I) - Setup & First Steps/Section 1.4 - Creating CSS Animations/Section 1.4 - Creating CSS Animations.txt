Section 1.4 Creating CSS Animations:

--------------------------------------
Learning Outcome
--------------------------------------
> How to create CSS animations using @keyframes and the animation property


--------------------------------------
CSS Animation & @keyframes
--------------------------------------
- There are two types of animations in CSS:
   1. Transition property (easier method)
   2. The @keyframes

- We use the @keyframes keyword followed by the animation name to create our own animation.
- Within our keyframes we can specify what we want to happen at each moment in time of the animation.
- 0% is when the animation actually starts and 100% is when the animation finishes. We can add more percentages inbetween our start and end percentages.
   @keyframes moveInLeft {
      0% {
         // animation properties e.g. opacity: 0;
      }

      100% {
         // animation properties e.g. opacity: 1;
      }
   }

- The browsers are optimised for animation in opacity or transform properties.
- To apply the animation there are two main properties we need to specify which are animation-name and animation-duration.
- animation-delay allows our animation to be delayed before executing.
- animation-iteration-count allows our animation to occur a set number of times.
- animation-timing-function defines how the animation will proceed (i.e. how fast or slow the parameters specified will occur over time). There are built-in timing values such as ease, ease-in, ease-out, ease-in-out, etc.
- We can use the shorthand property animation to put all the values of the above animation properties and allow CSS to figure out values means what properties.
   animation: moveInRight 1s ease-out;

- If we want an animation to trigger on an event such as a hover we would specify the element id/class followed by :hover pseudo class. There are many different pseudo classes.
- We can create keyframes and use the animations on any (multiple) elements within our web page.