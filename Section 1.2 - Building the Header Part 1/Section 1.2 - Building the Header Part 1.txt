Section 1.2 Building the Header Part 1:

--------------------------------------
Learning Outcome
--------------------------------------
> The best way to perform a basic reset using the universal selector
> How to set project-wide font definition
> How to clip parts of elements using clip-path


--------------------------------------
Basic Reset
--------------------------------------
- We could use Normalise CSS in order to make a cross browser reset. However, browsers are becoming more and more better/consistent in the way that they render websites and so no longer necessary. Instead we can now reset using the universal selector.

- In the CSS file use a universal selector:
   * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
   }

- The * will select each and every element on the page and then apply the declaration within the curly brackets.
- The box-sizing: border-box property changes the box model so that borders and padding are no longer added to the total width/height that we specify for a box.


--------------------------------------
Project-wide Font Definition
--------------------------------------
- To add a overall font property we will go to the CSS file and use the body element selector.
- Properties related to font are usually inherited and so using the power of inheritance. 
- The body element is basically the parent element of all the other elements and then this font-family will get inherited by all the child elements of the body.
- More efficient and best practice rather than adding to the universal selector.


--------------------------------------
Clip-Path
--------------------------------------
- To have two background image, one on top of the other, we would need to use the background-image property and separate each image by a comma. The first image within the list will sit on top.
   background-image: linear-gradient(#7ed56f, #28b485), url(../img/hero.jpg);
- The linear-gradient will sit above the url image because it appears first in the list.

- The clip-path property allows us to clip a path from an image. This is a really modern CSS property.
- We need to specify a polygon in which the image/element will still be visible.
- We use the polygon() function to define a bunch of coordinates which defines the polygon.
- We use x y coordinates to mark each point. So point 0 0 will start at the top left corner of the web page (ignoring any padding).
   clip-path: polygon(0 0, 100% 0, 100% 500px, 0 100%)
- We can specify in any type of units i.e. px, %, rem, vh, etc.

Useful Resource:
https://bennettfeely.com/clippy/